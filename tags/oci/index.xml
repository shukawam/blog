<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>OCI on Shukawam's Daily Blog</title><link>https://shukawam.github.io/blog/tags/oci/</link><description>Recent content in OCI on Shukawam's Daily Blog</description><generator>Hugo -- gohugo.io</generator><language>ja</language><lastBuildDate>Thu, 08 Apr 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://shukawam.github.io/blog/tags/oci/index.xml" rel="self" type="application/rss+xml"/><item><title>Oracle FunctionsのCold Start対策</title><link>https://shukawam.github.io/blog/blog/2021/0408-oracle-functions-cold-start/</link><pubDate>Thu, 08 Apr 2021 00:00:00 +0000</pubDate><guid>https://shukawam.github.io/blog/blog/2021/0408-oracle-functions-cold-start/</guid><description>始めに OCI の FaaS サービスである Functions の Cold Start の対策をメモしておく。将来的に事前暖機の機能等がリリースされた場合、本記事はアンチパターンとなる可能性があることをご了承の上参照してください。(あくまで、2021/04/08 現在取りえる手法として書きます)
Functions の定期実行 この手のサービスではよくとられてきた手法ですが、Functions に適当なエンドポイントを用意して定期的に実行するというものです。コンテナが落ちるまでの具体的な時間は不明ですが、感覚的に 15 ~ 20 分といった所なので 10 分に一回叩けば問題ないと思います。現在、Functions 自体に定期実行するような機能は存在しないので外部から実行してあげる必要がありますが、具体的に取りえる方法としては以下の通り。(他にもあるかもしれないですが&amp;hellip;)
適当な Compute Instance から CLI や SDK、署名付きの HTTP エンドポイントを定期的に叩く OCI Monitoring の Health Check を使用する 一つずつ簡単に紹介します。
適当な Compute Instance から定期実行する こちらは、特に解説不要かな、、cron でも書いて適当に叩いてください。
OCI Monitoring の Health Check 機能を使用する Health Check のエンドポイントを持つ Functions を作成する fn init --runtime java11 fn-hello 一つの Functions に対して、API Gateway でエンドポイントを複数作成し、そのパスで分岐処理するパターンです。
今回は、
/cold/hello: Hello, world という文字列を返却するエンドポイント /cold/health: 定期実行用の常に{&amp;quot;status&amp;quot;: &amp;quot;UP&amp;quot;}を返却するエンドポイント といった形で作ってみました。</description></item></channel></rss>